services:
  parking.frontend:
    container_name: parking.frontend
    env_file:
      - .env
    build:
      context: ./frontend
    ports:
      - '8005:80'
      - '443:443'
    environment:
      VITE_API_URL: ${VITE_API_URL}
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped

  parking.plate_detector:
    container_name: parking.plate_detector
    env_file:
      - .env
    build: ./detection_model
    ports:
      - '50051:50051'
    environment:
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}

  parking.api:
    container_name: parking.api
    env_file:
      - .env
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      HTTP_PORT: ${HTTP_PORT}
      GRPC_PORT: ${GRPC_PORT}
      AUTH_SECRET: ${AUTH_SECRET}
      ACCESS_TOKEN_DURATION: ${ACCESS_TOKEN_DURATION}
      REFRESH_TOKEN_DURATION: ${REFRESH_TOKEN_DURATION}
      DATABASE_URI: ${DATABASE_URI}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESSKEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRETKEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET: ${MINIO_BUCKET}
      MINIO_BASEURL: ${MINIO_BASEURL}
      MINIO_USESSL: ${MINIO_USESSL}
      REDIS_URI: ${REDIS_URI}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
    ports:
      - '8002:8080'
    depends_on:
      - parking.db
      - parking.minio
      - parking.redis
      - parking.plate_detector
    restart: unless-stopped

  parking.db:
    container_name: parking.db
    env_file:
      - .env
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5433:5432'
    volumes:
      - parking_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  parking.minio:
    image: minio/minio:latest
    env_file:
      - .env
    container_name: parking.minio
    ports:
      - '9000:9000' # MinIO API
      - '9001:9001' # MinIO Console
    restart: unless-stopped
    volumes:
      - parking_minio_data:/data
      - parking_minio_config:/root/.minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"

  parking.redis:
    container_name: parking.redis
    env_file:
      - .env
    image: redis:latest
    restart: unless-stopped
    ports:
      - '6389:6379'
    volumes:
      - parking_redis_data:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DATABASES: ${REDIS_DB}
    command: ['redis-server', '--appendonly', 'yes', '--requirepass', 'password']

networks:
  default:
    name: parking
    driver: bridge

volumes:
  parking_postgres_data:
    name: parking_postgres_data
  parking_minio_data:
    name: parking_minio_data
  parking_minio_config:
    name: parking_minio_config
  parking_redis_data:
    name: parking_redis_data
